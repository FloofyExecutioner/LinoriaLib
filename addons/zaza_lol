--[[
	
	Gui2Lua Winning! ~ Ch0nky Code:tm:
	
	30 objects
	
]]--

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Frame_1 = Instance.new("Frame")
local UIGradient = Instance.new("UIGradient")
local UIStroke = Instance.new("UIStroke")
local top = Instance.new("Frame")
local UIGradient_1 = Instance.new("UIGradient")
local TextLabel = Instance.new("TextLabel")
local UIGradient_2 = Instance.new("UIGradient")
local mainStuff = Instance.new("Frame")
local rgb_gradient = Instance.new("Frame")
local UIGradient_3 = Instance.new("UIGradient")
local UIGradient_4 = Instance.new("UIGradient")
local TextLabel_1 = Instance.new("TextLabel")
local UIStroke_1 = Instance.new("UIStroke")
local TextLabel_2 = Instance.new("TextLabel")
local Load = Instance.new("Frame")
local UIGradient_5 = Instance.new("UIGradient")
local UIStroke_2 = Instance.new("UIStroke")
local TextButton = Instance.new("TextButton")
local Exit = Instance.new("Frame")
local UIGradient_6 = Instance.new("UIGradient")
local UIStroke_3 = Instance.new("UIStroke")
local TextButton_1 = Instance.new("TextButton")
local keybox = Instance.new("Frame")
local UIGradient_7 = Instance.new("UIGradient")
local UIStroke_4 = Instance.new("UIStroke")
local key = Instance.new("TextBox")
local TextLabel_3 = Instance.new("TextLabel")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

ScreenGui.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Enabled = false
ScreenGui.Parent = gethui and gethui() or (function() syn.protect_gui(ScreenGui); return game:GetService('CoreGui') end)()

Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BorderSizePixel = 0
Frame.Size = UDim2.new(0.178, 0, 0.176, 0)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Parent = ScreenGui

Frame_1.AnchorPoint = Vector2.new(0.5, 0.5)
Frame_1.BorderSizePixel = 0
Frame_1.Size = UDim2.new(1, 0, 0.008, 0)
Frame_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_1.Position = UDim2.new(0.5, 0, 0.144511, 0)
Frame_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_1.Parent = Frame

UIGradient.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 229, 255)), ColorSequenceKeypoint.new(0.155709, Color3.fromRGB(0, 76, 216)), ColorSequenceKeypoint.new(0.346021, Color3.fromRGB(220, 25, 255)), ColorSequenceKeypoint.new(0.628028, Color3.fromRGB(235.093, 14.2196, 145.04)), ColorSequenceKeypoint.new(1, Color3.fromRGB(251, 255, 0)) }
UIGradient.Parent = Frame_1

UIStroke.Color = Color3.fromRGB(17, 17, 17)
UIStroke.Parent = Frame

top.AnchorPoint = Vector2.new(0.5, 0.5)
top.BorderSizePixel = 0
top.Size = UDim2.new(1, 0, 0.141959, 0)
top.BorderColor3 = Color3.fromRGB(0, 0, 0)
top.Name = "top"
top.Position = UDim2.new(0.5, 0, 0.0709793, 0)
top.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
top.Parent = Frame

UIGradient_1.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(36, 36, 36)), ColorSequenceKeypoint.new(1, Color3.fromRGB(24, 24, 24)) }
UIGradient_1.Rotation = 90
UIGradient_1.Parent = top

TextLabel.TextWrapped = true
TextLabel.RichText = true
TextLabel.TextScaled = true
TextLabel.TextWrap = true
TextLabel.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 14
TextLabel.Position = UDim2.new(0.0242549, 0, 0.133652, 0)
TextLabel.Size = UDim2.new(0.9745, 0, 0.708801, 0)
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.Text = "ratohub loader"
TextLabel.FontSize = Enum.FontSize.Size14
TextLabel.BackgroundTransparency = 1
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.Parent = top

UIGradient_2.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(44, 44, 44)), ColorSequenceKeypoint.new(1, Color3.fromRGB(49, 49, 49)) }
UIGradient_2.Rotation = -90
UIGradient_2.Parent = Frame

mainStuff.AnchorPoint = Vector2.new(0.5, 0.5)
mainStuff.BorderSizePixel = 0
mainStuff.Size = UDim2.new(0.942, 0, 0.756, 0)
mainStuff.BorderColor3 = Color3.fromRGB(0, 0, 0)
mainStuff.Name = "mainStuff"
mainStuff.Position = UDim2.new(0.501, 0, 0.582, 0)
mainStuff.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
mainStuff.Parent = Frame

rgb_gradient.AnchorPoint = Vector2.new(0.5, 0.5)
rgb_gradient.BorderSizePixel = 0
rgb_gradient.Size = UDim2.new(1, 0, 0.01, 0)
rgb_gradient.BorderColor3 = Color3.fromRGB(0, 0, 0)
rgb_gradient.Name = "rgb_gradient"
rgb_gradient.Position = UDim2.new(0.5, 0, 0.00465825, 0)
rgb_gradient.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
rgb_gradient.Parent = mainStuff

UIGradient_3.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 229, 255)), ColorSequenceKeypoint.new(0.155709, Color3.fromRGB(0, 76, 216)), ColorSequenceKeypoint.new(0.346021, Color3.fromRGB(220, 25, 255)), ColorSequenceKeypoint.new(0.628028, Color3.fromRGB(235.093, 14.2196, 145.04)), ColorSequenceKeypoint.new(1, Color3.fromRGB(251, 255, 0)) }
UIGradient_3.Parent = rgb_gradient

UIGradient_4.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 25)), ColorSequenceKeypoint.new(1, Color3.fromRGB(27, 27, 27)) }
UIGradient_4.Rotation = -90
UIGradient_4.Parent = mainStuff

TextLabel_1.TextWrapped = true
TextLabel_1.RichText = true
TextLabel_1.TextScaled = true
TextLabel_1.TextWrap = true
TextLabel_1.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
TextLabel_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_1.TextSize = 14
TextLabel_1.Position = UDim2.new(0.01, 0, 0.0152985, 0)
TextLabel_1.Size = UDim2.new(0.885, 0, 0.102239, 0)
TextLabel_1.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_1.Text = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name
TextLabel_1.FontSize = Enum.FontSize.Size14
TextLabel_1.BackgroundTransparency = 1
TextLabel_1.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_1.Parent = mainStuff

UIStroke_1.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_1.Thickness = 0.5
UIStroke_1.Color = Color3.fromRGB(24, 24, 24)
UIStroke_1.Parent = mainStuff

TextLabel_2.TextWrapped = true
TextLabel_2.TextScaled = true
TextLabel_2.TextWrap = true
TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 14
TextLabel_2.Position = UDim2.new(0.0561646, 0, 0.163214, 0)
TextLabel_2.Size = UDim2.new(0.885, 0, 0.124426, 0)
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.Text = "welcome, %username%."
TextLabel_2.FontSize = Enum.FontSize.Size14
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_2.Parent = mainStuff

Load.BorderSizePixel = 0
Load.Size = UDim2.new(0.453296, 0, 0.147916, 0)
Load.Name = "Load"
Load.Position = UDim2.new(0.0333803, 0, 0.776558, 0)
Load.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Load.Parent = mainStuff

UIGradient_5.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(34, 34, 34)), ColorSequenceKeypoint.new(1, Color3.fromRGB(24, 24, 24)) }
UIGradient_5.Rotation = 90
UIGradient_5.Parent = Load

UIStroke_2.Thickness = 0.6
UIStroke_2.Color = Color3.fromRGB(66, 66, 66)
UIStroke_2.Parent = Load

TextButton.TextWrapped = true
TextButton.Modal = true
TextButton.AutoButtonColor = false
TextButton.TextScaled = true
TextButton.TextWrap = true
TextButton.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.FontSize = Enum.FontSize.Size14
TextButton.Position = UDim2.new(0, 0, 0.125, 0)
TextButton.TextSize = 14
TextButton.Size = UDim2.new(1, 0, 0.75, 0)
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.Text = "Load"
TextButton.BackgroundTransparency = 1
TextButton.Parent = Load

Exit.BorderSizePixel = 0
Exit.Size = UDim2.new(0.453296, 0, 0.147916, 0)
Exit.Name = "Exit"
Exit.Position = UDim2.new(0.506694, 0, 0.776558, 0)
Exit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Exit.Parent = mainStuff

UIGradient_6.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(34, 34, 34)), ColorSequenceKeypoint.new(1, Color3.fromRGB(24, 24, 24)) }
UIGradient_6.Rotation = 90
UIGradient_6.Parent = Exit

UIStroke_3.Thickness = 0.6
UIStroke_3.Color = Color3.fromRGB(66, 66, 66)
UIStroke_3.Parent = Exit

TextButton_1.TextWrapped = true
TextButton_1.Modal = true
TextButton_1.AutoButtonColor = false
TextButton_1.TextScaled = true
TextButton_1.TextWrap = true
TextButton_1.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
TextButton_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_1.FontSize = Enum.FontSize.Size14
TextButton_1.Position = UDim2.new(0, 0, 0.125, 0)
TextButton_1.TextSize = 14
TextButton_1.Size = UDim2.new(1, 0, 0.75, 0)
TextButton_1.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_1.Text = "Exit"
TextButton_1.BackgroundTransparency = 1
TextButton_1.Parent = Exit

keybox.BorderSizePixel = 0
keybox.Size = UDim2.new(0.92661, 0, 0.147916, 0)
keybox.Name = "keybox"
keybox.Position = UDim2.new(0.0333803, 0, 0.576872, 0)
keybox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
keybox.Parent = mainStuff

UIGradient_7.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(34, 34, 34)), ColorSequenceKeypoint.new(1, Color3.fromRGB(24, 24, 24)) }
UIGradient_7.Rotation = 90
UIGradient_7.Parent = keybox

UIStroke_4.Thickness = 0.6
UIStroke_4.Color = Color3.fromRGB(66, 66, 66)
UIStroke_4.Parent = keybox

key.FontSize = Enum.FontSize.Size14
key.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
key.TextScaled = true
key.TextWrap = true
key.PlaceholderColor3 = Color3.fromRGB(165, 165, 165)
key.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
key.Position = UDim2.new(0, 0, 0.125, 0)
key.BackgroundTransparency = 1
key.PlaceholderText = "key"
key.TextSize = 14
key.Size = UDim2.new(1, 0, 0.75, 0)
key.TextColor3 = Color3.fromRGB(255, 255, 255)
key.Text = ""
key.CursorPosition = -1
key.Name = "key"
key.TextWrapped = true
key.Parent = keybox

TextLabel_3.TextWrapped = true
TextLabel_3.RichText = true
TextLabel_3.TextScaled = true
TextLabel_3.TextWrap = true
TextLabel_3.FontFace = Font.new("rbxasset://fonts/families/Inconsolata.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextSize = 14
TextLabel_3.Position = UDim2.new(0.0530869, 0, 0.325922, 0)
TextLabel_3.Size = UDim2.new(0.885, 0, 0.146613, 0)
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.Text = "please provide your whitelist key"
TextLabel_3.FontSize = Enum.FontSize.Size14
TextLabel_3.BackgroundTransparency = 1
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left
TextLabel_3.Parent = mainStuff

UIAspectRatioConstraint.AspectRatio = 1.92857
UIAspectRatioConstraint.Parent = Frame

local Loading = false
local games = {
    [863266079] = [[loadstring(game:HttpGet('https://scripts.luawl.com/16309/obfuscatetest.lua'))()]],
}

TextButton.Activated:Connect(function()
    if Loading == false then
        Loading = true
        getgenv().wl_key = key.Text
        loadstring(games[game.PlaceId])()
        ScreenGui:Destroy()
    end
end)

TextButton_1.Activated:Connect(function()
    Loading = true
    ScreenGui:Destroy()
end)

if games[game.PlaceId] == nil then
    return (function()
        Loading = true
        ScreenGui:Destroy()
        messagebox('You are on an unsupported game','ratohub',0)
    end)() 
end

ScreenGui.Enabled = true
